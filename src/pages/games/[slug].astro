---
import { GameHero, Heading, Image, Platforms, Section } from "@/components";
import pageData from "@/database/games-data-page.json";
import { Game } from "@/domain/protocols";
import Layout from "@/layouts/Layout.astro";

export async function getStaticPaths() {
  const availableGames = (await Astro.glob(
    "../../database/games/*.json"
  )) as unknown as Game[];

  return availableGames.map((game) => {
    return {
      params: { slug: game.slug },
      props: { game },
    };
  });
}

const {
  game: { default: game },
} = Astro.props as { game: { default: Game } };
---

<Layout title={game.name} topPageHref="#top">
  <main class="w-full" id="top">
    <GameHero
      game={game}
      socialMedia={pageData["social-media"]}
      connect={pageData.connect}
    />

    <Section id="description">
      <Heading level={1} className="mb-8">
        {pageData.description.title}
      </Heading>

      <div class="grid grid-cols-1 gap-12 lg:grid-cols-2 lg:gap-24">
        <p>
          {game.description}
        </p>

        <Image
          className="w-full lg:w-[500px]"
          src={game.banner.url}
          alt={game.banner.alt}
        />
      </div>
    </Section>

    <Section id="download" className="mt-0">
      <Heading level={1} className="mb-8">
        {pageData.download.title}
      </Heading>
      <div class="flex flex-wrap justify-around gap-7">
        {
          game.platforms !== undefined && game.platforms.length > 0 && (
            <Platforms platforms={game.platforms} />
          )
        }
      </div>
    </Section>
  </main>
</Layout>

<script is:inline>
gsap.registerPlugin(ScrollTrigger);

gsap.to("#header", {
  opacity: 0,
  y: -100,
  duration: 0,
  scrollTrigger: "#header"
})

gsap.to("#header", {
  opacity: 1,
  y: 0,
  duration: 0.5,
  scrollTrigger: "#header"
})

document.querySelectorAll("#hero footer a").forEach((el, i) => {
  gsap.to(el, {
    opacity: 0,
    y: 50,
    duration: 0,
    scrollTrigger: el
  })

  gsap.to(el, {
    opacity: 1,
    y: 0,
    duration: 0.25,
    delay: 0.25 * i,
    scrollTrigger: el
  })
})

gsap.to("#description p", {
  opacity: 0,
  duration: 0,
  x: -100,
  scrollTrigger: "#description"
})


gsap.to("#description p", {
  opacity: 1,
  duration: 0.5,
  x: 0,
  scrollTrigger: "#description"
})

gsap.to("#description img", {
  opacity: 0,
  duration: 0,
  x: 100,
  scrollTrigger: "#description"
})


gsap.to("#description img", {
  opacity: 1,
  duration: 0.5,
  x: 0,
  scrollTrigger: "#description"
})

document.querySelectorAll("#download a").forEach((el, i) => {
  gsap.to(el, {
    opacity: 0,
    scale: 0.5,
    duration: 0,
    scrollTrigger: el
  })

  gsap.to(el, {
    opacity: 1,
    scale: 1,
    duration: 0.25,
    delay: 0.25 * i,
    scrollTrigger: el
  })
})

gsap.to("#footer", {
  opacity: 0,
  duration: 0,
  y: 100,
  scrollTrigger: "#footer"
})


gsap.to("#footer", {
  opacity: 1,
  duration: 0.5,
  y: 0,
  scrollTrigger: "#footer"
})


gsap.to("#footer>div", {
  opacity: 0,
  duration: 0,
  y: 50,
  scrollTrigger: "#footer"
})


gsap.to("#footer>div", {
  opacity: 1,
  duration: 0.5,
  y: 0,
  delay: 0.25,
  scrollTrigger: "#footer"
})
</script>

